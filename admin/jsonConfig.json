{
	"i18n": true,
	"type": "tabs",
	"items": {
		// Main Page and generic Setting of Adapter & ESPHome Dashboard
		"_options": {
			"type": "panel",
			"label": "Main settings",
			"items": {

				// Header ESPHome communication details
				"howToConnect": {
					"type": "header",
					"text": "lblHeaderConnect",
					"size": 1
				},

				// Lines of text with details
				"headerHowToConnect-details-1": {
					"newLine": true,
					"type": "staticText",
					"text": "lblConnectDetails-Line-1"
				},

				"headerHowToConnect-details-2": {
					"newLine": true,
					"type": "staticText",
					"text": "lblConnectDetails-Line-2"
				},
				"headerHowToConnect-details-3": {
					"newLine": true,
					"type": "staticText",
					"text": "lblConnectDetails-Line-3"
				},

				// Mention & link to api.proto project
				"headerESPHomeDashboard-details-api.proto": {
					"type": "staticLink",
					"label": "api.proto",
					"href" : "https://github.com/esphome/esphome/blob/dev/esphome/components/api/api.proto"
				},

				"emptyLine-6": {
					"newLine": true,
					"type": "staticText",
					"text": ""
				},

				// Text explaining ioBroker integration
				"headerHowToConnect-details-4": {
					"newLine": true,
					"type": "staticText",
					"text": "lblConnectIobroker"
				},

				"emptyLine-7": {
					"newLine": true,
					"type": "staticText",
					"text": ""
				},
				"emptyLine-8": {
					"newLine": true,
					"type": "staticText",
					"text": ""
				},

				// Header default credentials
				"defaultCredentials": {
					"type": "header",
					"text": "lblDefaultCredentials",
					"size": 1
				},

				// Explanation of usage and warning
				"headerDefaultCredentials-details-1": {
					"newLine": true,
					"type": "staticText",
					"text": "lblDefaultCredentials-Line-1"
				},
				"headerDefaultCredentials-details-2": {
					"newLine": true,
					"type": "staticText",
					"text": "lblDefaultCredentials-Line-2"
				},

				// Credentials which will be stored (encrypted) in adapter config object
				"encryptionKey": {
					"newLine": true,
					"type": "password",
					"label": "lblEncryptionKey",
					"sm": 3
				},
				"apiPass": {
					"type": "password",
					"label": "lblApiPass",
					"sm": 2
				}
			}
		},

		// Tab devices
		"devices": {
			"type": "panel",
			"label": "Devices",
			"items": {

				// Enable/disable autodiscovery and store setting in adapter config object
				"autodiscovery": {
					"newLine": true,
					"disabled": "true",
					"type": "checkbox",
					"sm": 2,
					"md": 2,
					"label": "lblAutoDiscovery"
				},

				"discoveryListeningAddress" : {
					"type": "ip",
					"disabled": "true",
					"sm": 2,
					"md": 2,
					"default": "0.0.0.0",
					"label": "lblDiscoveryListeningAddress",
					"help": "hlpDiscoveryListeningAddress",
					"listenOnAllPorts" : true,
					"onlyIp4" : true
				},

				// Refresh table showing all devices
				// Sends message to backend to get all current known devices, their configuration and connection status
				"loadDevices": {
					"newLine": true,
					"type": "sendTo",
					"hidden": "!_alive",
					"command": "loadDevices",
					"jsonData": "{ \"date\": \"${data}\"}",
					"label": "lblLoadDevices",
//					"tooltip": "restoreDefaultToolTip",
					"useNative": true,
					"variant": "outlined",
					"showProcess" : true,
					"xs": 12,
					"sm": 12,
					"md": 12,
					"lg": 12
				},

				// Text to explain adapter must be running to load this table
				"details-1": {
					"newLine": true,
					"type": "staticText",
					"text": "lblTxtNoButtonsIfNotActive",
					"hidden": "_alive",
					"xs": 12,
					"sm": 12,
					"md": 12,
					"lg": 12
				},

				// Input fields to ADD / Modify devices
				"deviceIP": {
					"newLine": true,
					"type": "autocompleteSendTo",
					"command": "getDeviceIPs",
					"jsonData": "{ \"service\": \"${data.deviceInputIP}\" }",
					"xs": 2,
					"sm": 2,
					"md": 2,
					"lg": 2,
					"label": "lblInputDeviceIP-content",
					"tooltip": "hlpInputDeviceIP",
					"help": "hlpInputDeviceIP"
				},
				"encryptionKey": {
					"type": "password",
					"label": "lblInputEncryptionKey",
					"doNotSave": true,
					"default": "",
					"tooltip": "hlpInputEncryptionKey",
					"help": "hlpInputEncryptionKey",
					"xs": 4,
					"sm": 4,
					"md": 4,
					"lg": 4
				},
				"apiPassword": {
					"type": "password",
					"label": "lblInputApiPassword",
					"doNotSave": true,
					"default": "",
					"tooltip": "hlpInputApiPassword",
					"help": "hlpInputApiPassword",
					"xs": 2,
					"sm": 2,
					"md": 2,
					"lg": 2
				},

				// Button do ADD / Modify devices, sends
				// Sends device IP and credentials to backend
				"_addUpdateDevice": {
					"newLine": true,
					"type": "sendTo",
					"label": "lbl_addUpdateDevice",
					"variant": "outlined",
					"showProcess" : true,
					"command": "_addUpdateDevice",
					"jsonData": "{ \"ip\": \"${data.deviceIP}\", \"encryptionKey\": \"${data.encryptionKey}\", \"apiPassword\": \"${data.apiPassword}\" }",
					"useNative": true,
					"disabled": "data.deviceIP===''",
					"hidden": "!_alive",
					"tooltip": "ttGetStationId",
					"help": "hlpGetStationId",
					"xs": 12,
					"sm": 12,
					"md": 12,
					"lg": 12
				},

				"deleteDevice": {
					"newLine": true,
					"type": "sendTo",
					"label": "lblDelDevice",
					"variant": "outlined",
					"showProcess" : true,
					"command": "deleteDevice",
					"jsonData": "{ \"ip\": \"${data.deviceIP}\"}",
					"useNative": true,
					"disabled": "data.deviceIP===''",
					"hidden": "!_alive",
					"tooltip": "ttGetStationId",
					"help": "hlpGetStationId",
					"xs": 12,
					"sm": 12,
					"md": 12,
					"lg": 12,
					"confirm" : {
						"text" : "Are you sure to delete this device ? Alle states will be removed",
						"title" : "Confirm device Deletion",
						"ok" : "Delete Device",
						"cancel" : "Cancel",
						"type" : "warning"
					}
				},

				// Table (provided by backend) of all devices and their connection status
				"templateTable": {
					"type": "table",
					"noDelete": true,
					"newLine": true,
					"xs": 12,
					"sm": 12,
					"md": 5,
					"lg": 12,
					"hidden": "data._templateTable[0].template == 'template.NewMessage'",
					"label": "lblDevicesTable",
					"showSecondAddAt": 5,
					"items": [
						{
							"type": "text",
							"readOnly" : true,
							"attr": "MACAddress",
							"width": "15% ",
							"title": "MAC-Address",
							"tooltip": "templateKeyTip",
							"filter": false,
							"sort": false,
							"default": "",
							"validatorNoSaveOnError": true
						},
						{
							"type": "text",
							"readOnly" : true,
							"attr": "deviceName",
							"width": "15% ",
							"title": "Device Name",
							"tooltip": "templateKeyTip",
							"filter": false,
							"sort": false,
							"default": "",
							"validatorNoSaveOnError": true
						},
						{
							"type": "text",
							"attr": "ip",
							"readOnly" : true,
							"width": "15% ",
							"title": "IP Address",
							"tooltip": "templateKeyTip",
							"filter": false,
							"sort": false,
							"default": "",
							//ToDo add validation if IP-Address format
							//"validator": "const x={};for (const c of globalData.templateTable) {if (x[c.templateKey]==='x') return false; x[c.templateKey]='x';}; return true;",
							"validatorNoSaveOnError": true
						},
						{
							"type": "text",
							"readOnly" : true,
							"attr": "connectState",
							"width": "15% ",
							"title": "Connection Status",
							"tooltip": "templateKeyTip",
							"filter": false,
							"sort": false,
							"default": "",
							"validatorNoSaveOnError": true
						}

					]
				}
			}
		},

		"ESPHomeDashboard": {
			"type": "panel",
			"label": "ESPHome Dashboard",
			"items": {

				// Header ESPHome
				"headerESPHomeDashboard": {
					"type": "header",
					"text": "lblHeaderMainPage",
					"size": 1
				},
				// Introduction text
				"introLine-1": {
					"type": "staticText",
					"text": "introLine-1"
				},
				"introLine-2": {
					"newLine": true,
					"type": "staticText",
					"text": "introLine-2"
				},

				"emptyLine-1": {
					"newLine": true,
					"type": "staticText",
					"text": ""
				},

				// Mentioning & link to ESPHome project
				"headerESPHomeDashboard-details-3": {
					"newLine": true,
					"type": "staticText",
					"text": "ESPHomeCommunityLink"
				},
				"headerESPHomeDashboard-details-Link": {
					"type": "staticLink",
					"label": "esphome.io",
					"href" : "https://esphome.io/"
				},
				"emptyLine-2": {
					"newLine": true,
					"type": "staticText",
					"text": ""
				},

				// ESPHome Dashboard Explanation
				"headerESPHomeDashboard-details-4": {
					"newLine": true,
					"type": "staticText",
					"text": "lblEnableESPHome"
				},

				// ESPHome Dashboard configuration
				"ESPHomeDashboardEnabled": {
					"newLine": true,
					"type": "checkbox",
					"sm": 2,
					"md": 2,
					"lg": 2,
					"label": "chkEnableESPHome"
				},
				"ESPHomeDashboardIP": {
					"type": "autocompleteSendTo",
					"sm": 3,
					"label": "lblESPHomeIP",
					"command": "getHostIp",
					"jsonData": "{ \"service\": \"${data.deviceInputIP}\" }"
				},
				"ESPHomeDashboardPort": {
					"type": "text",
					"text": "",
					"sm": 1,
					"readOnly" : true,
					"label": "lblESPHomePort"
				},

				// Explanation usage of IP-Address input field
				"headerESPHomeDashboard-details-5": {
					"newLine": true,
					"type": "staticText",
					"text": "lblDashboardLink"
				},

				// Some empty lines to move next head a little down
				"emptyLine-3": {
					"newLine": true,
					"type": "staticText",
					"text": ""
				},
				"emptyLine-4": {
					"newLine": true,
					"type": "staticText",
					"text": ""
				},
				"emptyLine-5": {
					"newLine": true,
					"type": "staticText",
					"text": ""
				}
			}
		},

		"ignoreList": {
			"type": "panel",
			"label": "Ignore List",
			"items": {

				// Table (stored in adapter instance native object), to be ignored for device discovery
				"ignoredDevices": {
					"type": "table",
					"newLine": true,
					"xs": 12,
					"sm": 12,
					"md": 5,
					"lg": 12,
					"hidden": "data._templateTable[0].template == 'template.NewMessage'",
					"label": "lblIgnoreList",
					"showSecondAddAt": 5,
//					"useNative": true,
					"allowAddByFilter" : true,
					"items": [
						{
							"type": "text",
							"attr": "IP-Address",
							"width": "30% ",
							"title": "IP-Address",
							"tooltip": "templateKeyTip",
							"filter": false,
							"sort": false,
							"default": "",
							//ToDo add validation if IP-Address format
							//"validator": "const x={};for (const c of globalData.templateTable) {if (x[c.templateKey]==='x') return false; x[c.templateKey]='x';}; return true;",
							"validatorNoSaveOnError": true
						},
						{
							"type": "text",
							"attr": "name",
							"width": "20% ",
							"title": "Name",
							"tooltip": "templateKeyTip",
							"filter": false,
							"sort": false,
							"default": "",
							"validatorNoSaveOnError": true
						},
						{
							"type": "text",
							"attr": "description",
							"width": "40% ",
							"title": "Description",
							"tooltip": "templateKeyTip",
							"filter": false,
							"sort": false,
							"default": "",
							"validatorNoSaveOnError": true
						}

					]
				}

			}
		}

//		"sandBox": {
//			"type": "panel",
//			"label": "sandBox",
//			"items": {
//				"bindAddress" : {
//					"type": "ip",
//					"onlyIp4": true,
//					"noInternal": true
//				}
//
//			}
//		}
	}
}